{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":" "},{"kind":"internalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"id","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The id to find in the array."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The element associated with "},{"type":"codeVoice","code":"id"},{"type":"text","text":" if found in the array; otherwise, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This "},{"type":"emphasis","inlineContent":[{"type":"text","text":"id-based"}]},{"type":"text","text":" subscript returns the element identified by the given id if found in the"},{"type":"text","text":" "},{"type":"text","text":"array, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no element is found."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you assign an element for an id and that element already exists, the array overwrites the"},{"type":"text","text":" "},{"type":"text","text":"existing value in place. If the array doesn’t contain the element, it is appended to the"},{"type":"text","text":" "},{"type":"text","text":"array."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you assign "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" for a given id, the array removes the element identified by that id."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Looking up values in the array through this subscript has an expected complexity"},{"type":"text","text":" "},{"type":"text","text":"of O(1) hashing\/comparison operations on average, if "},{"type":"codeVoice","code":"ID"},{"type":"text","text":" implements high-quality hashing."},{"type":"text","text":" "},{"type":"text","text":"Updating the array also has an amortized expected complexity of O(1) – although individual"},{"type":"text","text":" "},{"type":"text","text":"updates may need to copy or resize the array’s underlying storage."}]}],"type":"aside","name":"Complexity"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Element identity must remain constant over modification. Modifying an"},{"type":"text","text":" "},{"type":"text","text":"element’s id will cause a crash."}]}],"type":"aside","name":"Postcondition"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/subscript(id:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/subscript(id:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Accesses the value associated with the given id for reading and writing."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"title":"subscript(id:)","roleHeading":"Instance Subscript","role":"symbol","symbolKind":"subscript","externalID":"s:21IdentifiedCollections0A5ArrayV2idq_Sgx_tcip","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"role":"symbol","title":"IdentifiedArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/subscript(id:)":{"role":"symbol","title":"subscript(id:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Accesses the value associated with the given id for reading and writing."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/subscript(id:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/identifiedarray\/subscript(id:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"}}}