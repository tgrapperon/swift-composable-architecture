{"seeAlsoSections":[{"title":"Related Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co"},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"type":"text","text":"development of the library."}],"identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Additional-Resources","level":2,"type":"heading","text":"Additional Resources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture"}]}]}]},{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library provides a few core tools that can be used to build applications of varying purpose and"},{"type":"text","text":" "},{"type":"text","text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter"},{"type":"text","text":" "},{"type":"text","text":"day-to-day when building applications, such as:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"State management"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"type":"text","text":"many screens so that mutations in one screen can be immediately observed in another screen."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Composition"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to break down large features into smaller components that can be extracted to their own,"},{"type":"text","text":" "},{"type":"text","text":"isolated modules and be easily glued back together to form the feature."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Side effects"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to let certain parts of the application talk to the outside world in the most testable and"},{"type":"text","text":" "},{"type":"text","text":"understandable way possible."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Testing"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to not only test a feature built in the architecture, but also write integration tests for"},{"type":"text","text":" "},{"type":"text","text":"features that have been composed of many parts, and write end-to-end tests to understand how"},{"type":"text","text":" "},{"type":"text","text":"side effects influence your application. This allows you to make strong guarantees that your"},{"type":"text","text":" "},{"type":"text","text":"business logic is running in the way you expect."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Ergonomics"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as"},{"type":"text","text":" "},{"type":"text","text":"possible."}]}]}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ComposableArchitecture","title":"ComposableArchitecture","symbolKind":"module","role":"collection","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Essentials","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/Dependencies","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing"]},{"title":"Upgrade guides","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocols"]},{"title":"State management","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]},{"title":"Integrations","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"]},{"title":"Testing","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated"]},{"title":"Classes","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpReflectable","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpRepresentable","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpStringConvertible"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DiffFormat","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UIScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler"]},{"title":"Functions","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTAssertNoDifference(_:_:_:file:line:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:name:indent:maxDepth:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-5ivuf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof"]},{"title":"Operators","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/..(_:_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-1zudw","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2n5ny","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2r5nq","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4nrup","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4qhtw","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4v1w8","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-82yvm","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9oq0w","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9tuff","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/~=(_:_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingSchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArrayOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateSchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestSchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedSchedulerOf"]}],"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/customDump(_:to:name:indent:maxDepth:)":{"role":"symbol","title":"customDump(_:to:name:indent:maxDepth:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"customDump"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"TargetStream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"TargetStream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDepth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Dumps the given value’s contents using its mirror to the specified output stream."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/customdump(_:to:name:indent:maxdepth:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpRepresentable":{"role":"symbol","title":"CustomDumpRepresentable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDumpRepresentable"}],"abstract":[{"type":"text","text":"A type that can be converted to a value for the purpose of dumping."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpRepresentable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomDumpRepresentable"}],"url":"\/documentation\/composablearchitecture\/customdumprepresentable"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4qhtw":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Identifies and returns a given case path. Enables shorthand syntax on static case paths, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" "},{"type":"codeVoice","code":"\/.self"},{"type":"text","text":"  instead of "},{"type":"codeVoice","code":".self"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4qhtw","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4qhtw"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CasePath":{"role":"symbol","title":"CasePath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded"},{"type":"text","text":" "},{"type":"text","text":"value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"url":"\/documentation\/composablearchitecture\/casepath"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/SwiftUI":{"role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUI","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftui"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpReflectable":{"role":"symbol","title":"CustomDumpReflectable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDumpReflectable"}],"abstract":[{"type":"text","text":"A type that explicitly supplies its own mirror for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpReflectable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomDumpReflectable"}],"url":"\/documentation\/composablearchitecture\/customdumpreflectable"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler":{"role":"symbol","title":"TestScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestScheduler"}],"abstract":[{"type":"text","text":"A scheduler whose current time and execution can be controlled in a deterministic manner."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestScheduler"}],"url":"\/documentation\/composablearchitecture\/testscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"role":"symbol","title":"IdentifiedArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"role":"article","title":"Adopting Swift concurrency","abstract":[{"type":"text","text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/swiftconcurrency"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"role":"symbol","title":"AnyScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyScheduler"}],"abstract":[{"type":"text","text":"A type-erasing wrapper for the "},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"type":"text","text":"many types of schedulers without needing to actually introduce a generic to your code."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyScheduler"}],"url":"\/documentation\/composablearchitecture\/anyscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ImmediateScheduler":{"role":"symbol","title":"ImmediateScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateScheduler"}],"abstract":[{"type":"text","text":"A scheduler for performing synchronous actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImmediateScheduler"}],"url":"\/documentation\/composablearchitecture\/immediatescheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-2n5ny":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the identity case path for the given type. Enables "},{"type":"codeVoice","code":"\/MyType.self"},{"type":"text","text":" syntax."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2n5ny","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-2n5ny"},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"type":"link","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","url":"https:\/\/www.pointfree.co\/collections\/composable-architecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Testing":{"role":"article","title":"Testing","abstract":[{"type":"text","text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable"},{"type":"text","text":" "},{"type":"text","text":"Architecture."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Testing","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/testing"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/FailingScheduler":{"deprecated":true,"role":"symbol","title":"FailingScheduler","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FailingScheduler"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FailingScheduler"}],"url":"\/documentation\/composablearchitecture\/failingscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ActorIsolated":{"role":"symbol","title":"ActorIsolated","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActorIsolated"}],"abstract":[{"type":"text","text":"A generic wrapper for isolating a mutable value to an actor."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActorIsolated","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActorIsolated"}],"url":"\/documentation\/composablearchitecture\/actorisolated"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"role":"article","title":"Getting started","abstract":[{"type":"text","text":"Learn how to integrate the Composable Architecture into your project and write your first"},{"type":"text","text":" "},{"type":"text","text":"application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/gettingstarted"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/customDump(_:name:indent:maxDepth:)":{"role":"symbol","title":"customDump(_:name:indent:maxDepth:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"customDump"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"indent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDepth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"type":"text","text":"Dumps the given value’s contents using its mirror to standard output."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:name:indent:maxDepth:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/customdump(_:name:indent:maxdepth:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-9oq0w":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9oq0w","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-9oq0w"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"title":"Discussions","titleInlineContent":[{"type":"text","text":"Discussions"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/XCTAssertNoDifference(_:_:_:file:line:)":{"role":"symbol","title":"XCTAssertNoDifference(_:_:_:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTAssertNoDifference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Asserts that two values have no difference."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/XCTAssertNoDifference(_:_:_:file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/xctassertnodifference(_:_:_:file:line:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedSchedulerOf":{"role":"symbol","title":"UnimplementedSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"UnimplementedScheduler"},{"type":"text","text":" by the scheduler it wraps rather than"},{"type":"text","text":" "},{"type":"text","text":"by the time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnimplementedSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/unimplementedschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/DiffFormat":{"role":"symbol","title":"DiffFormat","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DiffFormat"}],"abstract":[{"type":"text","text":"Describes how to format a difference between two values when using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DiffFormat","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DiffFormat"}],"url":"\/documentation\/composablearchitecture\/diffformat"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-2r5nq":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a case path for the given embed function."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2r5nq","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-2r5nq"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestSchedulerOf":{"role":"symbol","title":"TestSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify a "},{"type":"codeVoice","code":"TestScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"type":"text","text":" "},{"type":"text","text":"time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/testschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/~=(_:_:)":{"role":"symbol","title":"~=(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether or not a root value matches a particular case path."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/~=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/~=(_:_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4nrup":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4nrup","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4nrup"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"role":"symbol","title":"AnySchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"type":"text","text":" "},{"type":"text","text":"time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"url":"\/documentation\/composablearchitecture\/anyschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/diff(_:_:format:)":{"role":"symbol","title":"diff(_:_:format:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"diff"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"format"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DiffFormat","preciseIdentifier":"s:10CustomDump10DiffFormatV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Detects differences between two given values by comparing their mirrors and optionally returns"},{"type":"text","text":" "},{"type":"text","text":"a formatted string describing it."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/diff(_:_:format:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/..(_:_:)":{"role":"symbol","title":"..(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".."},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"AppendedValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a new extract function by appending the given extract function with an embed function."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/..(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/'..(_:_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":" type encapsulates a unit of work that can be run in the outside world, and can"},{"type":"text","text":" "},{"type":"text","text":"feed actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":". It is the perfect place to do side effects, such as network"},{"type":"text","text":" "},{"type":"text","text":"requests, saving\/loading from disk, creating timers, interacting with dependencies, and more."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-2jy2a":{"role":"symbol","title":"extract(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(_:)-2jy2a"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"role":"article","title":"Performance","abstract":[{"type":"text","text":"Learn how to improve the performance of features built in the Composable Architecture."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/performance"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-89rof":{"role":"symbol","title":"extract(case:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(case:from:)-89rof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-82wth":{"role":"symbol","title":"extract(case:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(case:from:)-82wth"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used"},{"type":"text","text":" "},{"type":"text","text":"anywhere it makes sense to observe state or send actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/composablearchitecture\/viewstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/FailingSchedulerOf":{"deprecated":true,"role":"symbol","title":"FailingSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FailingSchedulerOf"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FailingSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/failingschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-8h7yj":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-8h7yj"},"https://github.com/pointfreeco/swift-composable-architecture":{"title":"GitHub Repo","titleInlineContent":[{"type":"text","text":"GitHub Repo"}],"type":"link","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler":{"role":"symbol","title":"UnimplementedScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedScheduler"}],"abstract":[{"type":"text","text":"A scheduler that causes the current XCTest test case to fail if it is used."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnimplementedScheduler"}],"url":"\/documentation\/composablearchitecture\/unimplementedscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ImmediateSchedulerOf":{"role":"symbol","title":"ImmediateSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"ImmediateScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by"},{"type":"text","text":" "},{"type":"text","text":"the time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImmediateSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/immediateschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpStringConvertible":{"role":"symbol","title":"CustomDumpStringConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDumpStringConvertible"}],"abstract":[{"type":"text","text":"A type with a customized textual representation for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/customDump(_:to:name:indent:maxDepth:)"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/diff(_:_:format:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpStringConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomDumpStringConvertible"}],"url":"\/documentation\/composablearchitecture\/customdumpstringconvertible"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-1zudw":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-1zudw","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-1zudw"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4v1w8":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4v1w8","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4v1w8"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArrayOf":{"role":"symbol","title":"IdentifiedArrayOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArrayOf"}],"abstract":[{"type":"text","text":"A convenience type alias that specifies an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"},{"type":"text","text":" by an element conforming to the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArrayOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArrayOf"}],"url":"\/documentation\/composablearchitecture\/identifiedarrayof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-5ivuf":{"role":"symbol","title":"extract(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-5ivuf","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(_:)-5ivuf"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"role":"collectionGroup","title":"UIKit Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/uikit"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocols":{"role":"article","title":"Migrating to the reducer protocol","abstract":[{"type":"text","text":"Learn how to migrate existing applications to use the new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol"},{"type":"text","text":", in both Swift 5.7 and"},{"type":"text","text":" "},{"type":"text","text":"Swift 5.6."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocols","kind":"article","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocols"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UIScheduler":{"role":"symbol","title":"UIScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIScheduler"}],"abstract":[{"type":"text","text":"A scheduler that executes its work on the main queue as soon as possible."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UIScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIScheduler"}],"url":"\/documentation\/composablearchitecture\/uischeduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-9tuff":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9tuff","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-9tuff"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-82yvm":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a case path for the given embed function."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-82yvm","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-82yvm"},"doc://co.pointfree.ComposableArchitecture/documentation/Dependencies":{"role":"collection","title":"Dependencies","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/Dependencies","kind":"symbol","type":"topic","url":"\/documentation\/dependencies"}}}