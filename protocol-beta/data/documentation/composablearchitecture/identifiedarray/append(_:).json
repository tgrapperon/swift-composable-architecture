{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"item"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"item","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The element to add to the array."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A pair "},{"type":"codeVoice","code":"(inserted, index)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"inserted"},{"type":"text","text":" is a Boolean value indicating whether"},{"type":"text","text":" "},{"type":"text","text":"the operation added a new element, and "},{"type":"codeVoice","code":"index"},{"type":"text","text":" is the index of "},{"type":"codeVoice","code":"item"},{"type":"text","text":" in the resulting"},{"type":"text","text":" "},{"type":"text","text":"array."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The operation is expected to perform O(1) copy, hash, and compare operations on"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ID"},{"type":"text","text":" type, if it implements high-quality hashing."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/identifiedarray\/append(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/append(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Append a new member to the end of the array, if the array doesn’t already contain it."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"append(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:21IdentifiedCollections0A5ArrayV6appendySb8inserted_Si5indextq_F","extendedModule":"IdentifiedCollections","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"role":"symbol","title":"IdentifiedArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"abstract":[{"type":"text","text":"An ordered collection of identifiable elements."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray/append(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"ID"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"append(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", index"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Append a new member to the end of the array, if the array doesn’t already contain it."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray\/append(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/identifiedarray\/append(_:)"}}}