{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"mainRunLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa","text":"AnySchedulerOf"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Introduce controllable timing to your reducer by using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependency"},{"type":"text","text":" property wrapper"},{"type":"text","text":" "},{"type":"text","text":"with a key path to this property. The wrapped value is a Combine scheduler with the time"},{"type":"text","text":" "},{"type":"text","text":"type and options of a run loop. By default, "},{"type":"codeVoice","code":"RunLoop.main"},{"type":"text","text":" will be provided, with the"},{"type":"text","text":" "},{"type":"text","text":"exception of a "},{"type":"codeVoice","code":"TestStore"},{"type":"text","text":", in which a “failing” scheduler will be provided."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you could introduce controllable timing to a reducer that counts the number of"},{"type":"text","text":" "},{"type":"text","text":"seconds it’s onscreen:"}]},{"type":"codeListing","syntax":null,"code":["struct TimerReducer: ReducerProtocol {","  struct State {","    var elapsed = 0","  }","","  enum Action {","    case task","    case timerTicked","  }","","  @Dependency(\\.mainRunLoop) var mainRunLoop","","  func reduce(into state: inout State, action: Action) -> Effect<Action> {","    switch action {","    case .task:","      return .run { send in","        for await _ in self.mainRunLoop.timer(interval: .seconds(1)) {","          send(.timerTicked)","        }","      }","","    case .timerTicked:","      state.elapsed += 1","      return .none","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And you could test this reducer by overriding its main run loop with a test scheduler:"}]},{"type":"codeListing","syntax":null,"code":["let mainRunLoop = DispatchQueue.test","","let store = TestStore(","  initialState: TimerReducer.State()","  reducer: TimerReducer()","    .dependency(\\.mainRunLoop, mainQueue.eraseToAnyScheduler())",")","","let task = store.send(.task)","","mainRunLoop.advance(by: .seconds(1)","await store.receive(.timerTicked) {","  $0.elapsed = 1","}","mainRunLoop.advance(by: .seconds(1)","await store.receive(.timerTicked) {","  $0.elapsed = 2","}","await task.cancel()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/dependencyvalues\/mainrunloop"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues\/mainRunLoop","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The “main” run loop."}],"kind":"symbol","metadata":{"role":"symbol","title":"mainRunLoop","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"mainRunLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":">"}],"symbolKind":"property","externalID":"s:12Dependencies16DependencyValuesV11mainRunLoop17CombineSchedulers12AnySchedulerVySo05NSRunF0C10FoundationE0J8TimeTypeVAiJE0J7OptionsVGvp","extendedModule":"Dependencies","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/Dependencies","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues"]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"role":"symbol","title":"AnySchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"type":"text","text":" "},{"type":"text","text":"time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"url":"\/documentation\/composablearchitecture\/anyschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/Dependencies":{"role":"collection","title":"Dependencies","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/Dependencies","kind":"symbol","type":"topic","url":"\/documentation\/dependencies"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Dependency":{"role":"symbol","title":"Dependency","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Dependency"}],"abstract":[{"type":"text","text":"A property wrapper that exposes dependencies to reducers."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependency","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Dependency"}],"url":"\/documentation\/composablearchitecture\/dependency"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/DependencyValues":{"role":"symbol","title":"DependencyValues","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DependencyValues"}],"abstract":[{"type":"text","text":"A collection of dependencies propagated through a reducer hierarchy."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DependencyValues"}],"url":"\/documentation\/composablearchitecture\/dependencyvalues"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/DependencyValues/mainRunLoop":{"role":"symbol","title":"mainRunLoop","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"mainRunLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnySchedulerOf","preciseIdentifier":"s:17CombineSchedulers14AnySchedulerOfa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"RunLoop","preciseIdentifier":"c:objc(cs)NSRunLoop"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"The “main” run loop."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyValues\/mainRunLoop","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/dependencyvalues\/mainrunloop"}}}