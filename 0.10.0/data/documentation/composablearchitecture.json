{"variants":[{"paths":["\/documentation\/composablearchitecture"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","interfaceLanguage":"swift"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDebugOutputConvertible"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugEnvironment","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Identified","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UIScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"]},{"title":"Functions","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-5ivuf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof"]},{"title":"Operators","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/..(_:_:)","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-1zudw","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2n5ny","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2r5nq","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4nrup","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4qhtw","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4v1w8","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-82yvm","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9oq0w","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9tuff","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/~=(_:_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingScheduler","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingSchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArrayOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateSchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestSchedulerOf","doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedSchedulerOf"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionFormat"]}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"ComposableArchitecture","title":"ComposableArchitecture","symbolKind":"module","role":"collection","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[[]]},"references":{"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArray":{"role":"symbol","title":"IdentifiedArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArray"}],"abstract":[{"type":"text","text":"An array of elements that can be identified by a given key path."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArray"}],"url":"\/documentation\/composablearchitecture\/identifiedarray"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/FailingScheduler":{"deprecated":true,"role":"symbol","title":"FailingScheduler","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FailingScheduler"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FailingScheduler"}],"url":"\/documentation\/composablearchitecture\/failingscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"role":"symbol","title":"ForEachStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"abstract":[{"type":"text","text":"A structure that computes views on demand from a store on a collection of data."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ForEachStore"}],"url":"\/documentation\/composablearchitecture\/foreachstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"role":"symbol","title":"ViewStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewStore"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ViewStore"},{"type":"text","text":" is an object that can observe state changes and send actions. They are most"},{"type":"text","text":" "},{"type":"text","text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be"},{"type":"text","text":" "},{"type":"text","text":"used anywhere it makes sense to observe state and send actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewStore"}],"url":"\/documentation\/composablearchitecture\/viewstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedSchedulerOf":{"role":"symbol","title":"UnimplementedSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"UnimplementedScheduler"},{"type":"text","text":" by the scheduler it wraps rather than"},{"type":"text","text":" "},{"type":"text","text":"by the time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnimplementedSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/unimplementedschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/~=(_:_:)":{"role":"symbol","title":"~=(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns whether or not a root value matches a particular case path."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/~=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/~=(_:_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4qhtw":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Identifies and returns a given case path. Enables shorthand syntax on static case paths, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"e.g."}]},{"type":"text","text":" "},{"type":"codeVoice","code":"\/.self"},{"type":"text","text":"  instead of "},{"type":"codeVoice","code":".self"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4qhtw","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4qhtw"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-89rof":{"role":"symbol","title":"extract(case:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-89rof","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(case:from:)-89rof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4v1w8":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4v1w8","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4v1w8"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AnyScheduler":{"role":"symbol","title":"AnyScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyScheduler"}],"abstract":[{"type":"text","text":"A type-erasing wrapper for the "},{"type":"codeVoice","code":"Scheduler"},{"type":"text","text":" protocol, which can be useful for being generic over"},{"type":"text","text":" "},{"type":"text","text":"many types of schedulers without needing to actually introduce a generic to your code."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnyScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyScheduler"}],"url":"\/documentation\/composablearchitecture\/anyscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AnySchedulerOf":{"role":"symbol","title":"AnySchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnySchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"AnyScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"type":"text","text":" "},{"type":"text","text":"time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AnySchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnySchedulerOf"}],"url":"\/documentation\/composablearchitecture\/anyschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Identified":{"role":"symbol","title":"Identified","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Identified"}],"abstract":[{"type":"text","text":"A wrapper around a value and a hashable identifier that conforms to identifiable."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Identified","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Identified"}],"url":"\/documentation\/composablearchitecture\/identified"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/StorePublisher":{"role":"symbol","title":"StorePublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StorePublisher"}],"abstract":[{"type":"text","text":"A publisher of store state."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/StorePublisher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StorePublisher"}],"url":"\/documentation\/composablearchitecture\/storepublisher"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ActionFormat":{"role":"symbol","title":"ActionFormat","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionFormat"}],"abstract":[{"type":"text","text":"Determines how the string description of an action should be printed when using the "},{"type":"codeVoice","code":".debug()"},{"type":"text","text":" "},{"type":"text","text":"higher-order reducer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionFormat","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionFormat"}],"url":"\/documentation\/composablearchitecture\/actionformat"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/AlertState":{"role":"symbol","title":"AlertState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AlertState"}],"abstract":[{"type":"text","text":"A data type that describes the state of an alert that can be shown to the user. The "},{"type":"codeVoice","code":"Action"},{"type":"text","text":" "},{"type":"text","text":"generic is the type of actions that can be sent from tapping on a button in the alert."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/AlertState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AlertState"}],"url":"\/documentation\/composablearchitecture\/alertstate"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"text","text":"A store represents the runtime that powers the application. It is the object that you will pass"},{"type":"text","text":" "},{"type":"text","text":"around to views that need to interact with the application."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/composablearchitecture\/store"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UnimplementedScheduler":{"role":"symbol","title":"UnimplementedScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnimplementedScheduler"}],"abstract":[{"type":"text","text":"A scheduler that causes the current XCTest test case to fail if it is used."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UnimplementedScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UnimplementedScheduler"}],"url":"\/documentation\/composablearchitecture\/unimplementedscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestScheduler":{"role":"symbol","title":"TestScheduler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestScheduler"}],"abstract":[{"type":"text","text":"A scheduler whose current time and execution can be controlled in a deterministic manner."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestScheduler"}],"url":"\/documentation\/composablearchitecture\/testscheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-82yvm":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a case path for the given embed function."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-82yvm","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-82yvm"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/FailingSchedulerOf":{"deprecated":true,"role":"symbol","title":"FailingSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"FailingSchedulerOf"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/FailingSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FailingSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/failingschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ImmediateSchedulerOf":{"role":"symbol","title":"ImmediateSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"ImmediateScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by"},{"type":"text","text":" "},{"type":"text","text":"the time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImmediateSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/immediateschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(case:from:)-82wth":{"role":"symbol","title":"extract(case:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Attempts to extract values associated with a given enum case initializer from a given root enum."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(case:from:)-82wth","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(case:from:)-82wth"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-2n5ny":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the identity case path for the given type. Enables "},{"type":"codeVoice","code":"\/MyType.self"},{"type":"text","text":" syntax."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2n5ny","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-2n5ny"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CustomDebugOutputConvertible":{"role":"symbol","title":"CustomDebugOutputConvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDebugOutputConvertible"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDebugOutputConvertible","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomDebugOutputConvertible"}],"url":"\/documentation\/composablearchitecture\/customdebugoutputconvertible"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-4nrup":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-4nrup","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-4nrup"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-5ivuf":{"role":"symbol","title":"extract(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-5ivuf","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(_:)-5ivuf"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-1zudw":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-1zudw","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-1zudw"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/CasePath":{"role":"symbol","title":"CasePath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded"},{"type":"text","text":" "},{"type":"text","text":"value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/CasePath","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"url":"\/documentation\/composablearchitecture\/casepath"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/..(_:_:)":{"role":"symbol","title":"..(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".."},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"AppendedValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a new extract function by appending the given extract function with an embed function."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/..(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/'..(_:_:)"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/extract(_:)-2jy2a":{"role":"symbol","title":"extract(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/extract(_:)-2jy2a","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/composablearchitecture\/extract(_:)-2jy2a"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-9tuff":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9tuff","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-9tuff"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedArrayOf":{"role":"symbol","title":"IdentifiedArrayOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedArrayOf"}],"abstract":[{"type":"text","text":"A convenience type to specify an "},{"type":"codeVoice","code":"IdentifiedArray"},{"type":"text","text":" by an identifiable element."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedArrayOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdentifiedArrayOf"}],"url":"\/documentation\/composablearchitecture\/identifiedarrayof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/UIScheduler":{"role":"symbol","title":"UIScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UIScheduler"}],"abstract":[{"type":"text","text":"A scheduler that executes its work on the main queue as soon as possible."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/UIScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UIScheduler"}],"url":"\/documentation\/composablearchitecture\/uischeduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/ImmediateScheduler":{"role":"symbol","title":"ImmediateScheduler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ImmediateScheduler"}],"abstract":[{"type":"text","text":"A scheduler for performing synchronous actions."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/ImmediateScheduler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ImmediateScheduler"}],"url":"\/documentation\/composablearchitecture\/immediatescheduler"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A testable runtime for a reducer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-8h7yj":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-8h7yj","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-8h7yj"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"role":"symbol","title":"WithViewStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithViewStore"}],"abstract":[{"type":"text","text":"A structure that transforms a store into an observable view store in order to compute views from"},{"type":"text","text":" "},{"type":"text","text":"store state."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithViewStore"}],"url":"\/documentation\/composablearchitecture\/withviewstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/TestSchedulerOf":{"role":"symbol","title":"TestSchedulerOf","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestSchedulerOf"}],"abstract":[{"type":"text","text":"A convenience type to specify a "},{"type":"codeVoice","code":"TestScheduler"},{"type":"text","text":" by the scheduler it wraps rather than by the"},{"type":"text","text":" "},{"type":"text","text":"time type and options type."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/TestSchedulerOf","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestSchedulerOf"}],"url":"\/documentation\/composablearchitecture\/testschedulerof"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":" type encapsulates a unit of work that can be run in the outside world, and can feed"},{"type":"text","text":" "},{"type":"text","text":"data back to the "},{"type":"codeVoice","code":"Store"},{"type":"text","text":". It is the perfect place to do side effects, such as network requests,"},{"type":"text","text":" "},{"type":"text","text":"saving\/loading from disk, creating timers, interacting with dependencies, and more."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-9oq0w":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns a void case path for a case with no associated value."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-9oq0w","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-9oq0w"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/DebugEnvironment":{"role":"symbol","title":"DebugEnvironment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugEnvironment"}],"abstract":[{"type":"text","text":"An environment for debug-printing reducers."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugEnvironment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DebugEnvironment"}],"url":"\/documentation\/composablearchitecture\/debugenvironment"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","title":"Reducer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"abstract":[{"type":"text","text":"A reducer describes how to evolve the current state of an application to the next state, given"},{"type":"text","text":" "},{"type":"text","text":"an action, and describes what "},{"type":"codeVoice","code":"Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"role":"symbol","title":"IfLetStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLetStore"}],"abstract":[{"type":"text","text":"A view that safely unwraps a store of optional state in order to show one of two views."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IfLetStore"}],"url":"\/documentation\/composablearchitecture\/ifletstore"},"doc://co.pointfree.ComposableArchitecture/documentation/ComposableArchitecture//(_:)-2r5nq":{"role":"symbol","title":"\/(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"\/"},{"kind":"text","text":" "},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a case path for the given embed function."}],"identifier":"doc:\/\/co.pointfree.ComposableArchitecture\/documentation\/ComposableArchitecture\/\/(_:)-2r5nq","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/\/(_:)-2r5nq"}}}